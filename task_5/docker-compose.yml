services:
  myapp:
    build:
      context: ./server
      target: final
    container_name: myapp
    environment:
      APP_REST_PORT: "80"
      APP_RPS_PORT: "50051"
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    networks:
      - kfk
    ports:
      - "8082:80"
    depends_on:
      kafka:
        condition: service_healthy

  email_mock:
    build:
      context: ./emailServiceMock
      target: final
    container_name: email_mock
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    networks:
      - kfk
    depends_on:
      kafka:
        condition: service_healthy


  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - kfk
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 5s
      retries: 10

  ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8070:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
    networks:
      - kfk
    depends_on:
      - kafka


networks:
  kfk:
    driver: bridge